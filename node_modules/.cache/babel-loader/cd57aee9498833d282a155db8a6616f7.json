{"ast":null,"code":"import _slicedToArray from\"/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import Header from\"./Header\";import SearchForm from\"./SearchForm\";import Results from\"./Results\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),results=_useState2[0],resultsChanged=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showResults=_useState4[0],showResultsChanged=_useState4[1];var resultFetched=function resultFetched(result){resultsChanged(result);showResultsChanged(true);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(SearchForm,{onResult:resultFetched}),showResults?/*#__PURE__*/_jsx(Results,{data:results}):null]});}export default App;","map":{"version":3,"sources":["/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/App.js"],"names":["useState","Header","SearchForm","Results","App","results","resultsChanged","showResults","showResultsChanged","resultFetched","result"],"mappings":"gLAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,eAEkBJ,QAAQ,CAAC,EAAD,CAF1B,wCAERK,OAFQ,eAEAC,cAFA,8BAG0BN,QAAQ,CAAC,KAAD,CAHlC,yCAGRO,WAHQ,eAGIC,kBAHJ,eAKf,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAY,CAChCJ,cAAc,CAACI,MAAD,CAAd,CACAF,kBAAkB,CAAC,IAAD,CAAlB,CACD,CAHD,CAKE,mBACE,oCACE,KAAC,MAAD,IADF,cAEE,KAAC,UAAD,EAAY,QAAQ,CAAIC,aAAxB,EAFF,CAGGF,WAAW,cAAE,KAAC,OAAD,EAAS,IAAI,CAAGF,OAAhB,EAAF,CAA+B,IAH7C,GADF,CAOD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport Header from \"./Header\"\nimport SearchForm from \"./SearchForm\";\nimport Results from \"./Results\";\n\nfunction App() {\n\nconst [results,resultsChanged] = useState([]);\nconst [showResults,showResultsChanged] = useState(false);\n\nconst resultFetched = (result) => {\n  resultsChanged(result);\n  showResultsChanged(true);\n}\n\n  return (\n    <div>\n      <Header />\n      <SearchForm onResult = {resultFetched}/>\n      {showResults? <Results data= {results} />: null}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}