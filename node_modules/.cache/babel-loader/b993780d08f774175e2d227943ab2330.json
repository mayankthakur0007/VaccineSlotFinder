{"ast":null,"code":"var _jsxFileName = \"/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/Results.jsx\";\nimport Slots from \"./Slots\";\nimport \"./Styles.css\";\nimport Timebar from \"./Timebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Results = props => {\n  let currentDate = new Date();\n  let newDate;\n  let week = [];\n\n  for (var i = 0; i <= 6; i++) {\n    newDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() + i);\n    week.push({\n      date: newDate.toDateString(),\n      id: i\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Center Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), week.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: day.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 32\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/Results.jsx"],"names":["Slots","Timebar","Results","props","currentDate","Date","newDate","week","i","getFullYear","getMonth","getDate","push","date","toDateString","id","map","day"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,MAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,MAAIC,OAAJ;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,IAAAA,OAAO,GAAG,IAAID,IAAJ,CACRD,WAAW,CAACK,WAAZ,EADQ,EAERL,WAAW,CAACM,QAAZ,EAFQ,EAGRN,WAAW,CAACO,OAAZ,KAAwBH,CAHhB,CAAV;AAMAD,IAAAA,IAAI,CAACK,IAAL,CAAU;AAACC,MAAAA,IAAI,EAACP,OAAO,CAACQ,YAAR,EAAN;AAA6BC,MAAAA,EAAE,EAACP;AAAhC,KAAV;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIGD,IAAI,CAACS,GAAL,CAAUC,GAAD,iBAAS;AAAA,sBAAKA,GAAG,CAACJ;AAAT;AAAA;AAAA;AAAA;AAAA,kBAAlB,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA/BD;;KAAMX,O;AAiCN,eAAeA,OAAf","sourcesContent":["import Slots from \"./Slots\";\nimport \"./Styles.css\";\nimport Timebar from \"./Timebar\";\n\nconst Results = (props) => {\n  let currentDate = new Date();\n  let newDate;\n  let week = [];\n  for (var i = 0; i <= 6; i++) {\n    newDate = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth(),\n      currentDate.getDate() + i\n    );\n\n    week.push({date:newDate.toDateString(),id:i});\n  }\n  return (\n    <div>\n      <h2></h2>\n      <table>\n        <thead>\n          <tr>\n              <th>\n                  Center Name\n              </th>\n            {week.map((day) => <th>{day.date}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n            \n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}