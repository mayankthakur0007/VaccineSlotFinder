[{"/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/index.js":"1","/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/App.js":"2","/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/Header.jsx":"3","/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/SearchForm.jsx":"4","/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/Results.jsx":"5","/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/Strings.jsx":"6"},{"size":197,"mtime":1621756865572,"results":"7","hashOfConfig":"8"},{"size":533,"mtime":1621784248794,"results":"9","hashOfConfig":"8"},{"size":184,"mtime":1621758140167,"results":"10","hashOfConfig":"8"},{"size":2804,"mtime":1621771741266,"results":"11","hashOfConfig":"8"},{"size":2249,"mtime":1621790345238,"results":"12","hashOfConfig":"8"},{"size":46,"mtime":1621757821136,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wwwyyg",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/index.js",[],"/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/App.js",[],"/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/Header.jsx",["29"],"import Strings from \"./Strings\";\n\nconst Header = () => {\n    return (\n        <div>\n            <h2>Slot Finder India (For All Ages)</h2>\n        </div>\n    )\n}\n\nexport default Header;","/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/SearchForm.jsx",["30","31","32"],"import Strings from \"./Strings\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./Styles.css\";\n\nconst SearchForm = (props) => {\n  let [districtsData,districtDataChanged] = useState([]);\n  let [districts,districtchanged] = useState([]);\n  let [stateData,stateDataChanged] = useState([]);\n  let [states,statechanged] = useState([]);\n  let [selectedDistrict,selectedDistrictchanged] = useState('');\n\n  const onStateChange = (e) => {\n    let id = stateData.filter((state)=>{\n      if(state.state_name === e.value){\n        return state;\n      }\n    })[0].state_id;\n    axios\n      .get(`https://cdn-api.co-vin.in/api/v2/admin/location/districts/${id}`)\n      .then((response) => {\n        districtDataChanged(response.data.districts);\n        districtchanged(\n          response.data.districts.map((district) => {\n            return district.district_name;\n          })\n        );\n      })\n  };\n\n  const onDistrictChange = (e) => {\n    let id = districtsData.filter((district) => {\n      if (district.district_name === e.value) {\n        return district;\n      }\n    })[0].district_id;\n    selectedDistrictchanged(id);\n  };\n\n  const onSearch = (e) => {\n    e.preventDefault();\n    let currentDate = new Date();\n    let dd = currentDate.getDate();\n    let mm = currentDate.getMonth()+1;\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n    currentDate = `${dd}-${mm}-${currentDate.getFullYear()}`;\n    if (selectedDistrict !== \"\") {\n      axios\n        .get(\n          `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${selectedDistrict}&date=${currentDate}`\n        )\n        .then((response) => {\n          props.onResult(response.data.centers)\n        });\n    } else {\n      console.log(\"validation error\");\n    }\n  };\n\n  const onFocuses = () => {\n    axios\n      .get(\"https://cdn-api.co-vin.in/api/v2/admin/location/states\")\n      .then((response) => {\n        stateDataChanged(response.data.states);\n        statechanged(\n          response.data.states.map((state) => {\n            return state.state_name;\n          })\n        );\n      })\n  };\n\n  return (\n    <div>\n      <form id=\"districtselector\" onSubmit={onSearch}>\n        <div className=\"mar_small\">\n      <Dropdown\n        options={states}\n        onChange={onStateChange}\n        onFocus={onFocuses}\n        placeholder=\"Select State\"\n      />\n      </div>\n      <div className=\"mar_small\">\n      <Dropdown\n         options={districts}\n        onChange={onDistrictChange}\n        placeholder=\"Select District\"\n      />\n      </div>\n      <button type=\"submit\" className=\"mar_small\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/Results.jsx",["33"],"import { forwardRef } from \"react\";\nimport \"./Styles.css\";\n\nconst Results = (props) => {\n  let currentDate = new Date();\n  let newDate, compareDates;\n  let week = [];\n  for (var i = 0; i <= 6; i++) {\n    newDate = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth(),\n      currentDate.getDate() + i\n    );\n    let dd = currentDate.getDate() + i;\n    let mm = currentDate.getMonth() + 1;\n    if(dd<10){\n      dd= '0'+dd;\n    }\n    if(mm<10){\n      mm= '0'+mm;\n    }\n    compareDates = `${dd}-${mm}-${currentDate.getFullYear()}`\n    week.push({date:newDate.toDateString(),id:i,compareDate:compareDates});\n  }\n\n  let CenterData = props.data.map((details)=>{\n\n    let datesData = week.map((dates)=>{\n      return details.sessions.filter((list)=>{\n        return list.date===dates.compareDate\n      })\n    })\n\n    datesData = datesData.map((dates)=> dates[0])\n      \n    return {\n      center_id: details.center_id,\n      center_name: details.name,\n      center_block: details.block_name,\n      center_state: details.state_name,\n      center_pincode: details.pincode,\n      center_district: details.district_name,\n      center_address: details.address,\n      center_fee: details.fee_type,\n      slots: datesData\n    }\n  });\n\n  console.log(CenterData);\n\n  return (\n    <div>\n      <h2>Results</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Center Name</th>\n            {week.map((day) => (\n              <th key={day.id}>{day.date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {CenterData.map((centerinfo) => (\n            <tr key={centerinfo.center_id}>\n              <td>\n                {centerinfo.center_name}\n                <span>\n                  {centerinfo.center_address},{centerinfo.center_district},\n                  {centerinfo.center_state}({centerinfo.center_pincode})\n                </span>\n              </td>\n              {centerinfo.slots.map((slot) => {\n                return slot ?\n                  <td key={slot.session_id}>\n                    <h3>{slot.available_capacity}</h3>\n                  </td> : <td><h4>NA</h4></td>\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Results;","/Users/mayankpratapsingh/Documents/GitHub/slotfinderIndia/src/Strings.jsx",[],{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":15},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":15},{"ruleId":"38","severity":1,"message":"39","line":16,"column":38,"nodeType":"40","messageId":"41","endLine":16,"endColumn":40},{"ruleId":"38","severity":1,"message":"39","line":34,"column":46,"nodeType":"40","messageId":"41","endLine":34,"endColumn":48},{"ruleId":"34","severity":1,"message":"42","line":1,"column":10,"nodeType":"36","messageId":"37","endLine":1,"endColumn":20},"no-unused-vars","'Strings' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'forwardRef' is defined but never used."]